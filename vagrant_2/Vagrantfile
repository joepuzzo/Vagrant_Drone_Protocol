# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|


    # ---------------------------------- Define box type -------------------------------------

    # Every Vagrant development environment requires a box. You can search for
    config.vm.box = "ubuntu/trusty64"

    # Enables root login 
    config.ssh.forward_x11 = true 

    # ------------------------------------ Provisioning -------------------------------------

    # Anything you do directly to config vm will apply to all vms
    #config.vm.provision "shell", inline: "echo Box Is Live!"
    config.vm.provision "shell" do |s| 
        s.inline = "echo Box Is Live!"
        s.inline = <<-SHELL 
            mkdir tmp
            chown vagrant tmp
        SHELL
    end

    # Install Stuff
    config.vm.provision "install", type: "shell" do |s|
        s.inline = <<-SHELL
            apt-get install vim -y                   # Obviously we want vim on here :)
            apt-get install tmux -y                  # I like tumux - this is like screen
            #apt-get install wireshark-gnome -y       # Wireshark
            apt-get install xauth -y                 # Need this for X-Forwarding
            apt-get install lxc -y 
            #apt-get install dejavu-lgc-sans-fonts -y # Need this because of font issue 
        SHELL
    end


    # ----------------------------------- Copy files to VM -----------------------------------

    # Note: files that need spectial permissions must be moved via shell script after they are copied 


    # ------------------------------- Put things away with root ------------------------------

    config.vm.provision "cleanup", type: "shell" do |s|
        s.inline = <<-SHELL
        SHELL
    end


    # ----------------------------------- Now we create vms ----------------------------------

    config.vm.define "lxc" do |a|
        # a.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)"
        a.vm.network "private_network", ip: "192.168.3.2"
        a.vm.provision "network_setup", type: "shell", inline: <<-SHELL
        SHELL
    end 
end
